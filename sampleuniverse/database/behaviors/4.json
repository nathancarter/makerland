{"name":"Wanders near spawn point","__authors":["admin"],"targets":["creature"],"description":"Wanders randomly, at the rate given, but stays within the given radius of its spawn point.  The rate is given in two parts, first a frequency at which the creature takes a step (measured in seconds), and second the distance of that step, in map units (one unit is the size of a cell).  For instance, a creature may take a step 5 times per second, but only small steps, yielding smooth movement.  Or it may take larger steps once every two seconds, yielding jerkier movement.  The radius is measured in units of map cells.","parameters":{"stepFrequency":"how often (in seconds) the creature should take a step","default stepFrequency":1,"stepDistance":"how far (in map cells) each step should be","default stepDistance":0.1,"consistency":"what fraction of the time a step is in the same direction as the last step (0.0 to 1.0)","default consistency":0.9,"stepDuration":"how long each step lasts (in seconds, zero means instantaneous) -- be sure this is longer than stepFrequency","default stepDuration":0,"whileFighting":"whether to continue wandering even while fighting (true or false)","default whileFighting":false,"radius":"how many map cells from its spawn point the creature may walk","default radius":3},"code":"// save the creature for use in the function below (where \"this\" will be different)\nvar creature = this;\nvar spawn = null;\n// for consistency and less jittery movement\nvar lastdx = 0, lastdy = 0;\n// wandering is many little steps, repeatedly, forever\nsetInterval( function () {\n    // if the creature has no location, do nothing\n    if ( !creature.location ) return;\n    // is the creature supposed to do this wandering while fighting?\n    if ( whileFighting != 'true' ) {\n        // they are NOT supposed to wander while fighting.  so...if they're fighting, do nothing.\n        if ( creature.enemiesWithin( 2 ).length > 0 ) return;\n    }\n    // remember my first ever location as my spawn point\n    if ( spawn == null ) spawn = { x : creature.location[1], y : creature.location[2] };\n    // compute my move direction\n    if ( Math.random() < parseFloat( consistency ) && ( lastdx || lastdy ) ) {\n\t    // most of the time, just keep walking the same way\n        var dx = lastdx;\n        var dy = lastdy;\n    } else {\n        // some of the time, choose a random direction, always the same distance\n        var angle = Math.random()*2*Math.PI;\n        var dx = lastdx = Math.cos(angle) * parseFloat( stepDistance );\n        var dy = lastdy = Math.sin(angle) * parseFloat( stepDistance );\n    }\n    // if that direction would lead too far from the spawn point, turn back\n    function dist ( x1, y1, x2, y2 ) { return Math.sqrt( (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2) ); }\n    var newx = creature.location[1] + dx;\n    var newy = creature.location[2] + dy;\n    if ( dist( spawn.x, spawn.y, newx, newy ) > parseFloat( radius ) ) {\n        dx = spawn.x - creature.location[1];\n        dy = spawn.y - creature.location[2];\n        var len = dist( 0, 0, dx, dy ) || 1;\n        dx = dx * parseFloat( stepDistance ) / len;\n        dy = dy * parseFloat( stepDistance ) / len;\n    }\n    // move the creature\n    creature.moveBy( dx, dy, parseFloat( stepDuration ) );\n}, parseFloat( stepFrequency )*1000 );"}